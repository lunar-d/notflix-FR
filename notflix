# Les dependences - webtorrent, BurntToast, nodejs
[void][System.Reflection.Assembly]::LoadWithPartialName('presentationframework')
# Import-Module BurntToast

#New-Item -ItemType Directory -Force -Path $env:TEMP/notflix-fr | out-null

# Marre des changements de domaine... je le recup ici
$fallbackdomain = "oxtorrent.be"
$torrentdomainsource = (Invoke-WebRequest -URI "https://supports-oxtorrent.com")
$domain = $torrentdomainsource.AllElements | Where-Object {$_.tagName -eq "SPAN"} | Where-Object {$_.style -eq "COLOR: red"}
if($null -eq $domain){$domain=$fallbackdomain}
$baseurl = "https://www."+$domain.innerText
$query = ""

#Demande recherche (sauf si deja donné en argument)
if ( !$args[0] ){
[xml]$XAMLMain = @'
<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	Title="notdmenu"
	Name="notdmenu"
	SizeToContent="Height"
	Top="0"
	Left="0"
	Width="{x:Static SystemParameters.PrimaryScreenWidth}"
	ResizeMode="NoResize"
	WindowStyle="None"
	AllowsTransparency="True"
	Topmost="true"
	FocusManager.FocusedElement="{Binding ElementName=searchquerry}"
	>
	<Grid>
	<Grid.ColumnDefinitions>
		<ColumnDefinition Width="Auto" />
		<ColumnDefinition />
	</Grid.ColumnDefinitions>
	<TextBlock Text="Recherche :" FontSize="24" Foreground="CornflowerBlue" />
	<TextBox Name="searchquerry" AutomationProperties.Name="simple TextBox" Text="" FontSize="24" Grid.Column="1" />
	</Grid>
</Window>
'@
$XamlLoader=(New-Object System.Xml.XmlNodeReader $XAMLMain)
$Form=[Windows.Markup.XamlReader]::Load( $XamlLoader )

$Textbox = $Form.findname("searchquerry")

$code = {
    [System.Windows.Input.KeyEventArgs]$e = $args[1]
    if ($e.Key -eq 'ESC')
    {
        $Form.Close()
        # New-BurntToastNotification -Text "Notflix",  "A la prochaine..."
        exit
    }
    if ($e.Key -eq 'Return')
    {
        $script:query = $Textbox.Text.ToString()
        $Form.Close()
    }

}

$null = $Form.add_KeyUp($code)

$Form.ShowDialog() | out-null
}
else{
    Write-Output "The condition was false"
}

$query = $query.replace(' ', '+')

# recup la page
# curl -A $useragent -s $baseurl/recherche/$query > $cachedir/tmp.html
$page = (Invoke-WebRequest -URI $baseurl"/recherche/"$query)
$torrentstags = $page.AllElements | Where-Object {$_.tagName -eq "tr"} | Where-Object {$_.innerHTML -match 'href=(")\/torrent\/.*<\/(A|a)>'}

# Les titres
$titles = $torrentstags.innerText

if ($titles.Length -ieq 0){
    # New-BurntToastNotification -Text "Notflix", "Pas de torrents disponibles correspondant à votre recherche."
    exit
}

# Les liens
$links = @()
$torrentstags.innerHTML | ForEach-Object {
    $Regex = [Regex]::new('(?<=href=")\/torrent\/.*(?=")')           
    $Match = $Regex.Match($_)           
    if($Match.Success)           
    {           
       $links += $Match.Value       
    }
}

[void][System.Reflection.Assembly]::LoadWithPartialName('presentationframework')
[xml]$XAMLNext = @'
<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	Title="notdmenu"
	Name="notdmenu"
	SizeToContent="Height"
	Top="0"
	Left="0"
	Width="{x:Static SystemParameters.PrimaryScreenWidth}"
	ResizeMode="NoResize"
	WindowStyle="None"
	AllowsTransparency="True"
	Topmost="true"
	FocusManager.FocusedElement="{Binding ElementName=searchquerry}"
	>
    
    <StackPanel Orientation="Vertical">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBlock Text="" FontSize="24" Foreground="CornflowerBlue" Grid.Column="0" Grid.Row="0" />
            <TextBox Name="searchquerry" AutomationProperties.Name="simple TextBox" Text="" FontSize="24" Grid.Column="1" />
        </Grid>
        <Grid Background="blue">
            <ListBox Name="resultlist" MinHeight = "50" AllowDrop="True" SelectionMode="Extended" Width="Auto">
            </ListBox>
        </Grid>
    </StackPanel>
</Window>
'@
$XamlLoader=(New-Object System.Xml.XmlNodeReader $XAMLNext)
$Form=[Windows.Markup.XamlReader]::Load( $XamlLoader )

$queryBox = $Form.FindName('searchquerry')
$listBox = $Form.findname('resultlist')

$titles | ForEach-Object {$listbox.Items.Add($_)} | out-null

$code = {
    [System.Windows.Input.KeyEventArgs]$e = $args[1]
    if ($e.Key -eq 'ESC')
    {
        $Form.Close()
        # New-BurntToastNotification -Text "Notflix",  "A la prochaine..."
        exit
    }
    if ($e.Key -eq 'Return')
    {
        $script:titleSelected = $listbox.SelectedItems
        $Form.Close()
    }
}

$filter = {
    $listbox.Items.Clear();
    $titlesfil = $titles | Where-Object {$_ -match '.*(' +$queryBox.Text+').*'}
    $titlesfil | ForEach-Object {$listbox.Items.Add($_) | out-null}
}

$Form.add_KeyUp($code)
$queryBox.add_TextChanged($filter)
$listbox.Add_SelectionChanged({
    $script:titleSelected = $listbox.SelectedItems
})

$Form.ShowDialog() | out-null
$titleSelectedIndex = [array]::FindIndex($titles,[Predicate[String]]{param($s)$s -eq $titleSelected})

# New-BurntToastNotification -Text "Notflix", "Recherche du lien Magnet et lancement."
$url=$links[$titleSelectedIndex]
$fullURL= $baseurl+$url

# Recherche du lien magnet
$pageTorrent = (Invoke-WebRequest -URI $fullURL)

$Regex = [Regex]::new("magnet:\?xt=urn:btih:[0-9a-fA-F]{40,}.*(?=';)")           
$Match = $Regex.Match($pageTorrent.Content)           
if($Match.Success)           
{           
    $magnet = $Match.Value   
}

$magnet | Set-Clipboard
# New-BurntToastNotification -Text "Notflix", "Lien dans le presse-papier."

# C'est parti mon kiki
WebTorrent $magnet --vlc